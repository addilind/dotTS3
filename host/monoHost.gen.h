// Do not edit this directly; if there are changes needed, edit the codegen and regenerate
int plugin_offersConfigure(size_t hostPluginID);
void plugin_configure(size_t hostPluginID, void* handle, void* qParentWidget);
void plugin_registerPluginID(size_t hostPluginID, const char* id);
int plugin_processCommand(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* command);
void plugin_currentServerConnectionChanged(size_t hostPluginID, uint64_t serverConnectionHandlerID);
int plugin_requestAutoload(size_t hostPluginID);
void plugin_onConnectStatusChangeEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, unsigned int errorNumber);
void plugin_onNewChannelEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t channelParentID);
void plugin_onNewChannelCreatedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* invokerUniqueIdentifier);
void plugin_onDelChannelEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* invokerUniqueIdentifier);
void plugin_onChannelMoveEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* invokerUniqueIdentifier);
void plugin_onUpdateChannelEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t channelID);
void plugin_onUpdateChannelEditedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* invokerUniqueIdentifier);
void plugin_onUpdateClientEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* invokerUniqueIdentifier);
void plugin_onClientMoveEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* moveMessage);
void plugin_onClientMoveSubscriptionEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, int visibility);
void plugin_onClientMoveTimeoutEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* timeoutMessage);
void plugin_onClientMoveMovedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* moveMessage);
void plugin_onClientKickFromChannelEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* kickMessage);
void plugin_onClientKickFromServerEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* kickMessage);
void plugin_onClientIDsEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* clientName);
void plugin_onClientIDsFinishedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID);
void plugin_onServerEditedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* editerUniqueIdentifier);
void plugin_onServerUpdatedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID);
int  plugin_onServerErrorEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* extraMessage);
void plugin_onServerStopEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* shutdownMessage);
int  plugin_onTextMessageEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, int ffIgnored);
void plugin_onTalkStatusChangeEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint16_t clientID);
void plugin_onConnectionInfoEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint16_t clientID);
void plugin_onServerConnectionInfoEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID);
void plugin_onChannelSubscribeEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t channelID);
void plugin_onChannelSubscribeFinishedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID);
void plugin_onChannelUnsubscribeEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t channelID);
void plugin_onChannelUnsubscribeFinishedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID);
void plugin_onChannelDescriptionUpdateEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t channelID);
void plugin_onChannelPasswordChangedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t channelID);
void plugin_onPlaybackShutdownCompleteEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID);
void plugin_onSoundDeviceListChangedEvent(size_t hostPluginID, const char* modeID, int playOrCap);
void plugin_onEditPlaybackVoiceDataEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, int channels);
void plugin_onEditPostProcessVoiceDataEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, unsigned int* channelFillMask);
void plugin_onEditMixedPlaybackVoiceDataEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, unsigned int* channelFillMask);
void plugin_onEditCapturedVoiceDataEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, int* edited);
void plugin_onCustom3dRolloffCalculationClientEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, float* volume);
void plugin_onCustom3dRolloffCalculationWaveEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, float* volume);
void plugin_onUserLoggingMessageEvent(size_t hostPluginID, const char* logMessage, const char* completeLogString);
void plugin_onClientBanFromServerEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* kickMessage);
int  plugin_onClientPokeEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, int ffIgnored);
void plugin_onClientSelfVariableUpdateEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* newValue);
void plugin_onFileListEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* returnCode);
void plugin_onFileListFinishedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* path);
void plugin_onFileInfoEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t datetime);
void plugin_onServerGroupListEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, int saveDB);
void plugin_onServerGroupListFinishedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID);
void plugin_onServerGroupByClientIDEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t clientDatabaseID);
void plugin_onServerGroupPermListEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, int permissionSkip);
void plugin_onServerGroupPermListFinishedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t serverGroupID);
void plugin_onServerGroupClientListEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* clientUniqueID);
void plugin_onChannelGroupListEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, int saveDB);
void plugin_onChannelGroupListFinishedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID);
void plugin_onChannelGroupPermListEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, int permissionSkip);
void plugin_onChannelGroupPermListFinishedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t channelGroupID);
void plugin_onChannelPermListEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, int permissionSkip);
void plugin_onChannelPermListFinishedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t channelID);
void plugin_onClientPermListEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, int permissionSkip);
void plugin_onClientPermListFinishedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t clientDatabaseID);
void plugin_onChannelClientPermListEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, int permissionSkip);
void plugin_onChannelClientPermListFinishedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t clientDatabaseID);
void plugin_onClientChannelGroupChangedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* invokerUniqueIdentity);
int  plugin_onServerPermissionErrorEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, unsigned int failedPermissionID);
void plugin_onPermissionListGroupEndIDEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, unsigned int groupEndID);
void plugin_onPermissionListEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* permissionDescription);
void plugin_onPermissionListFinishedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID);
void plugin_onPermissionOverviewEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, int permissionSkip);
void plugin_onPermissionOverviewFinishedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID);
void plugin_onServerGroupClientAddedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* invokerUniqueIdentity);
void plugin_onServerGroupClientDeletedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* invokerUniqueIdentity);
void plugin_onClientNeededPermissionsEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, int permissionValue);
void plugin_onClientNeededPermissionsFinishedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID);
void plugin_onFileTransferStatusEvent(size_t hostPluginID, uint16_t transferID, uint64_t serverConnectionHandlerID);
void plugin_onClientChatClosedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* clientUniqueIdentity);
void plugin_onClientChatComposingEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* clientUniqueIdentity);
void plugin_onServerLogEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* logMsg);
void plugin_onServerLogFinishedEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t fileSize);
void plugin_onMessageListEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, int flagRead);
void plugin_onMessageGetEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t timestamp);
void plugin_onClientDBIDfromUIDEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t clientDatabaseID);
void plugin_onClientNamefromUIDEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* clientNickName);
void plugin_onClientNamefromDBIDEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* clientNickName);
void plugin_onComplainListEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, uint64_t timestamp);
void plugin_onBanListEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* lastNickName);
void plugin_onClientServerQueryLoginPasswordEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* loginPassword);
void plugin_onPluginCommandEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* pluginCommand);
void plugin_onIncomingClientQueryEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* commandText);
void plugin_onServerTemporaryPasswordListEvent(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* targetChannelPW);
void plugin_onAvatarUpdated(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* avatarPath);
void plugin_onHotkeyEvent(size_t hostPluginID, const char* keyword);
void plugin_onHotkeyRecordedEvent(size_t hostPluginID, const char* keyword, const char* key);
void plugin_onClientDisplayNameChanged(size_t hostPluginID, uint64_t serverConnectionHandlerID, const char* uniqueClientIdentifier);
